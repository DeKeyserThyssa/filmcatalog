---
import {API_KEY} from '../../apikey'
import Header from '../../components/generic/Header.astro'
import Layout from '../../layouts/Layout.astro'

export async function getStaticPaths() {
  const movies = await fetch(
    `https://api.themoviedb.org/3/trending/movie/day?api_key=${
      API_KEY
    }`,
  ).then((res) => res.json())

  return movies.results.map((el: any) => ({
    params: {
      slug: el.id
    },
  }))
}

const { slug } = Astro.params
const data = await fetch(
  `https://api.themoviedb.org/3/movie/${slug}?api_key=${
    API_KEY
  }&language=en-US`,
).then((res) => res.json())
console.log(data)

const crew = await fetch(`https://api.themoviedb.org/3/movie/${slug}/credits?api_key=${API_KEY}`).then((res) => res.json())
console.log(crew)

const watchProviders = await fetch(`https://api.themoviedb.org/3/movie/${slug}/watch/providers?api_key=${API_KEY}`).then((res) => res.json())

function toHoursAndMinutes(totalMinutes: any) {
  const minutes = totalMinutes % 60;
  const hours = Math.floor(totalMinutes / 60);

  return `${hours}h${minutes > 0 ? ` ${minutes}m` : ''}`;
}

---

<Layout title={data?.title}>
  <Header />
  <main>
    <div class="grid grid-cols-7 gap-3 pt-24">
    <div class="col-start-2">
      <img
        class="aspect-[2/3]"
        src={`${
          data.poster_path
            ? `https://image.tmdb.org/t/p/original${data.poster_path}`
            : '/placeholder_movie.svg'
        }`}
        alt="image of movie"
      />
    </div>
    <div class="col-start-4 col-span-3">
      <h1 class="text-4xl">
        {data.title} ({new Date(data.release_date).getFullYear()})
      </h1>
      <h2 class="text-2xl">Overview</h2>
      <p>{data.overview}</p>
      <div>
        <h2 class="text-2xl">Companies</h2>
        <ul class="flex flex-column">
          {data.production_companies.map((el: any) => (
            <li class="mr-3">{el.name}</li>
          ))}
        </ul>
      </div>
      <div>
        <h2 class="text-2xl">Genres</h2>
        <ul class="flex flex-column">
          {data.genres.map((el: any) => (
            <li class="mr-3">{el.name}</li>
          ))}
        </ul>
      </div>
      <div>
        <h2 class="text-2xl">Countries</h2>
        <ul class="flex flex-column">
          {data.production_countries.map((el: any) => (
            <li class="mr-3">{el.name}</li>
          ))}
        </ul>
      </div>
      <div>
        <h2 class="text-2xl">Languages</h2>
        <ul class="flex flex-column">
          {data.spoken_languages.map((el: any) => (
            <li class="mr-3">{el.name}</li>
          ))}
        </ul>
      </div>
      <div>
        <h2 class="text-2xl">Runtime</h2>
        <p>{toHoursAndMinutes(data.runtime)}</p>
      </div>
    </div>
    
  </div>
  <div class="mx-10">
      <h2 class="text-2xl">Watch Providers</h2>
      <ul class="flex flex-row justify-between">
        {watchProviders.results.US?.buy?.map((el: any) => (
          <li class="my-4">
            <img
              class="w-16 h-16 rounded-md object-cover"
              src={`${
                el.logo_path
                  ? `https://image.tmdb.org/t/p/original${el.logo_path}`
                  : 'https://via.placeholder.com/500x750'
              }`}
              alt="image of watch provider"
            />
          </li>
        ))}
      </ul>
    </div>
    <div class="mx-10">
      <h2 class="text-2xl">Crew</h2>
      <ul class="grid sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2 m-[70px auto]">
        {crew.cast.map((el: any) => (
          <li class="my-4">
            <img
              class="w-32 h-32 rounded-md object-cover"
              src={`${
                el.profile_path
                  ? `https://image.tmdb.org/t/p/original${el.profile_path}`
                  : '/placeholder_cast.svg'
              }`}
              alt="image of cast member"
            />
            <p class="text-lg font-medium">{el.name}</p>
            <p class="text-sm font-medium">{el.character}</p>
          </li>
        ))}
      </ul>
    </div>
</main>
</Layout>
