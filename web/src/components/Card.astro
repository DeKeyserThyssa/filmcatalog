---
export interface Props {
  id: number
  poster_path: string
  title: string
  original_language: string
  vote_average: number
  vote_count: number
}
const { id, title, original_language, poster_path, vote_average, vote_count } = Astro.props

function imageIsNull()
 {
   if (poster_path === null) {
     return '/placeholder_movie.svg'
   } else {
     return `https://image.tmdb.org/t/p/original${poster_path}`
   }
 }

 function getColor(vote_average: number) {
    if(vote_average>= 8){
        return '#00ff00'
    }else if(vote_average >= 5){
        return "#ffff00"
    }else{
        return '#ff0000'
    }
}
---

<li class="h-auto list-none rounded-xl shadow-2xl">
  <a href={`movie/${id}`}>
    <img
      class="aspect-[2/3]"
      src={`${imageIsNull()}`}
      alt="{title}"
    />
    <div class="p-2">
      <h3 class="text-2xl">{title}</h3>
      <p class=""><strong>language: </strong>{original_language}</p>
      <p class=""><strong>rating: </strong>{vote_average} ({vote_count})</p>
    </div>
  </a>
</li>


<!-- ---
  let movie: any
---

<li class="h-auto list-none w-64 rounded-xl shadow-2xl">
  <a href={`movie/${movie.id}`} rel="noopener noreferrer" target="_blank">
    <img
      class="aspect-[2/3]"
      src={`https://image.tmdb.org/t/p/original${movie.poster_path}`}
      alt={movie.title || ''}
    />
    <div class="p-2">
      <h3 class="text-2xl">{movie.title}</h3>
      <p class=""><strong>language: </strong>{movie.original_language}</p>
      <p class="">
        <strong>rating: </strong>{movie.vote_average} ({movie.vote_count})
      </p>
    </div>
  </a>
</li> -->